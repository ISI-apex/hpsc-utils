#!/usr/bin/python2

import sys
import argparse
import re
import os
from collections import OrderedDict

parser = argparse.ArgumentParser(
    description="Merge key-value environments, output to stdout")
parser.add_argument('input', nargs='+',
    help='Input files with environments to merge')
args = parser.parse_args()

d = OrderedDict()
for f in args.input:
    # ignore non-existant inputs, useful for overriding by merging
    if not os.path.exists(f):
        continue

    fin = open(f, "r")
    line_num = 0
    for line in fin:
        line = line.strip()
        if len(line) == 0 or line.startswith('#'):
            continue
        tok = line.split('=')
        v = "=".join(tok[1:]) # we only want one split (no maxsplit arg in PY2)
        if len(tok) < 2:
            raise Exception("line: %u: syntax error: not a key=value pair" % line_num)
        if re.match(r".*\+$", tok[0]):
            k = tok[0][:-1]
            append = True
        else:
            k = tok[0]
            append = False
        if re.search(r"\s", k):
            raise Exception("syntax error: line %u: invalid identifier: %s" \
                % (line_num, k))
        if append:
            d[k] += " " + v
        else:
            d[k] = v
        line_num += 1
    fin.close()

for k in d:
    sys.stdout.write(k + '=' + d[k] + "\n")
