SYSROOT=sysroot
QEMU=qemu
QEMU_DT=qemu-devicetrees

BLD=bld
BLD_TO_ROOT=..
FETCH=$(BLD)/fetch
TC=$(BLD)/tc
BLD_QEMU=$(BLD)/qemu
BLD_QEMU_TO_ROOT=$(BLD_TO_ROOT)/..
HOST=../hpsc-utils/sdk/host

# Host tools needed to build the SDK (not including deps of nested builds)
WGET=wget
TAR=tar

all: toolchains env qemu qemu-dt
clean: toolchains-clean env-env qemu-clean qemu-dt-clean

# Prerequisites added to this rule dynamically
fetch:

TC_PATHS=$(foreach t,$(DEPS_TC),$(TC)/$(DIR_$(t))/bin)
SPACE=$(subst ,, )
PATHS=$(subst $(SPACE),:,$(abspath \
	$(HOST) $(BLD_QEMU) $(BLD_QEMU)/aarch64-softmmu $(TC_PATHS)))

define ENV =
# Autogenerated environment file for the SDK
export PATH="$(PATHS):$$PATH"
export QEMU_DT="$(abspath $(QEMU_DT))"
export QEMU_DT_SRC="hpsc-arch.dts"
export QEMU_DT_FILE="$$QEMU_DT/LATEST/SINGLE_ARCH/hpsc-arch.dtb"
endef

ENV_FILE=$(BLD)/env.sh
env: $(ENV_FILE)
$(ENV_FILE): export ENV_SH=$(ENV)
$(ENV_FILE):
	echo "$$ENV_SH" > $@
env-clean:
	rm -f $(ENV_FILE)
.PHONY: env env-clean

# Not part of default build
sysroot:
	$(MAKE) -C $(SYSROOT)
sysroot-%:
	$(MAKE) -C $(SYSROOT) $*
.PHONY: sysroot sysroot-%

DEPS_TC=\
	arm_gnu_rm \
	arm_gnu_a \

DEPS=$(DEPS_TC)

toolchains: $(DEPS_TC)
toolchains-clean:
	rm -rf $(TC)/
.PHONY: toolchains-clean

# Other toolchain distributables may work as well, with the known exceptions:
# * GCC v8 breaks build of kernel 4.14 (build completes but kernel does not run)
# * gcc-arm-none-eabi v8 (from ARM, not Linaro) breaks build of M4,R52 bare metal
# * gcc-arm-none-eabi older than v7 2018-q2-update breaks build of R52 bare metal

URL_arm_gnu_rm=https://developer.arm.com/-/media/Files/downloads/gnu-rm/7-2018q2
TARBALL_arm_gnu_rm=gcc-arm-none-eabi-7-2018-q2-update-linux.tar.bz2
DIR_arm_gnu_rm=gcc-arm-none-eabi-7-2018-q2-update

URL_arm_gnu_a=https://releases.linaro.org/components/toolchain/binaries/latest-7/aarch64-linux-gnu
TARBALL_arm_gnu_a=gcc-linaro-7.4.1-2019.02-x86_64_aarch64-linux-gnu.tar.xz
DIR_arm_gnu_a=gcc-linaro-7.4.1-2019.02-x86_64_aarch64-linux-gnu

%/ :
	mkdir -p $@

define fetch-rule
fetch: $(FETCH)/$(TARBALL_$(1))
$(FETCH)/$(TARBALL_$(1)): | $(FETCH)/
	$(WGET) -O $$@ $(URL_$(1))/$$(@F)
endef

# touch the directory, since the timestamp of the dir in tar may be stored and
# it will be older than the tarball, which would cause the target to be remade.
define extract-rule
$(2)/$(DIR_$(1)): $(FETCH)/$(TARBALL_$(1)) | $(TC)/
	$(TAR) -C $(2) -x -f $$<
	touch $$@
$(1) : | $(2)/$(DIR_$(1))
endef

$(foreach d,$(DEPS),$(eval $(call fetch-rule,$(d))))
$(foreach d,$(DEPS_TC),$(eval $(call extract-rule,$(d),$(TC))))

# Several alternatives for installing dependencies

deps-centos7: toolchains env
	yum install -y https://centos7.iuscommunity.org/ius-release.rpm
	yum update
	yum group install "Development Tools"
	yum install java git gtk3 chrpath texinfo screen glib2-devel libfdt-devel \
		pixman-devel zlib-devel uboot-tools bc ncurses-devel python-configparser \
		python36u python36u-libs python36u-devel python36u-pip pax
	ln -sf /usr/bin/python3.6 /usr/bin/python3
	yum install cairo-devel cairo-gobject-devel gobject-introspection-devel \
		pygobject2 pygboject2-devel

deps-sysroot: sysroot toolchains env
	@echo 'source $(abspath $(SYSROOT)/bld/env.sh)' >> $(ENV_FILE)

# Components of the SDK that are built from source

# Build Qemu s.t. its GDB stub points to the given target CPU cluster:
# TRCH=0, RTPS_R52=1, RTPS_A53=2, HPPS=3
QEMU_GDB_TARGET_CLUSTER=3

QEMU_ARGS=CFLAGS+=-DGDB_TARGET_CLUSTER=$(QEMU_GDB_TARGET_CLUSTER)
$(BLD_QEMU)/aarch64-softmmu/qemu-system-aarch64: qemu

$(BLD_QEMU)/config.status: | $(BLD_QEMU)/
	cd $(BLD_QEMU) && $(BLD_QEMU_TO_ROOT)/$(QEMU)/configure \
		--target-list=aarch64-softmmu --enable-fdt \
		--disable-kvm --disable-xen --enable-debug
qemu: $(BLD_QEMU)/config.status
	$(MAKE) -C $(BLD_QEMU) $(QEMU_ARGS)
qemu-clean:
	$(MAKE) -C $(BLD_QEMU) $(QEMU_ARGS) clean
.PHONY: qemu qemu-clean

QDT_ARGS=
$(QEMU_DT)/LATEST/SINGLE_ARCH/hpsc-arch.dtb: qemu-dt
qemu-dt:
	$(MAKE) -C $(QEMU_DT) $(QDT_ARGS)
qemu-dt-clean:
	$(MAKE) -C $(QEMU_DT) $(QDT_ARGS) clean
.PHONY: qemu-dt qemu-dt-clean
